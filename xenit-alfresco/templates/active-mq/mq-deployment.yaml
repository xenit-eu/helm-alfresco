{{- if .Values.mq.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mq
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: mq
spec:
  {{- if .Values.general.hibernate }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.mq.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: mq
  strategy:
    {{- if eq .Values.mq.strategy.type "Recreate" }}
    type: {{ .Values.mq.strategy.type }}
    {{- else }}
    {{ toYaml .Values.general.strategy | nindent 4 }}
    {{- end }}
  {{- if .Values.mq.serviceAccount }}
  serviceAccountName: {{ .Values.mq.serviceAccount }}
  {{- end }}
  template:
    metadata:
      labels:
        app: mq
      annotations:
        checksum/mq-config: {{ include (print $.Template.BasePath "/active-mq/mq-config.yaml") . | sha256sum }}
        checksum/mq-secret: {{ include (print $.Template.BasePath "/active-mq/mq-secret.yaml") . | sha256sum }}
        {{- include "globalPodAnnotations" . | indent 8 }}
        {{- if .Values.mq.podAnnotations }}
        {{ toYaml .Values.mq.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: activemq
          image: {{ .Values.mq.image.registry }}/{{ .Values.mq.image.repository }}:{{ .Values.mq.image.tag }}
          imagePullPolicy: {{ .Values.mq.imagePullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: mq-configmap
            - secretRef:
                name: mq-secret
            {{- if .Values.mq.envFrom }}
            {{ toYaml .Values.mq.envFrom | nindent 12 }}
            {{- end }}
          ports:
            - name: stomp
              containerPort: 61613
            - name: openwire
              containerPort: 61616
            - name: amqp
              containerPort: 5672
            - name: web-console
              containerPort: 8161
          readinessProbe:
            tcpSocket:
              port: 61616
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 6
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 61616
            initialDelaySeconds: 130
            periodSeconds: 20
            failureThreshold: 1
            timeoutSeconds: 10
          {{- if or (.Values.mq.resources.requests) ((.Values.mq.resources.limits)) }}
          resources:
            {{- if .Values.mq.resources.requests }}
            requests:
            {{ toYaml .Values.mq.resources.requests | nindent 14 }}
            {{- end }}
            {{- if .Values.mq.resources.limits }}
            limits:
            {{ toYaml .Values.mq.resources.limits | nindent 14 }}
            {{- end }}
          {{- end }}
          volumeMounts:
          {{- if .Values.persistentStorage.mq.enabled }}
            - name: data
              mountPath: /opt/activemq/data
              subPath: mq/data
          {{- end }}
          {{- if .Values.persistentStorage.mq.additionalClaims }}
          {{- range .Values.persistentStorage.mq.additionalClaims }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
          {{- end }}
          {{- end }}
          {{- if .Values.mq.additionalVolumeMounts }}
          {{- toYaml .Values.mq.additionalVolumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.persistentStorage.mq.initVolumes }}
      initContainers:
        - name: init-fs
          image: "busybox:1.35.0"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "50Mi"
            limits:
              memory: "100Mi"
          command: [ "sh", "-c", "chown -R 33031:1000 /opt/activemq/data" ]
          {{- if .Values.persistentStorage.mq.enabled }}
          volumeMounts:
            - name: data
              mountPath: /opt/activemq/data
              subPath: mq/data
          {{- end }}
      {{- end }}
      imagePullSecrets:
        {{- if .Values.general.imagePullSecrets}}
        {{ toYaml .Values.general.imagePullSecrets | nindent 8 }}
        {{- end }}
        {{- if .Values.mq.imagePullSecrets}}
        {{ toYaml .Values.mq.imagePullSecrets | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.persistentStorage.mq.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentStorage.mq.name }}-pvc
      {{- end }}
        {{- if .Values.persistentStorage.mq.additionalClaims }}
      {{- range .Values.persistentStorage.mq.additionalClaims }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}-pvc
      {{- end }}
        {{- end }}
        {{- if .Values.mq.additionalVolumes }}
        {{- toYaml .Values.mq.additionalVolumes | nindent 8 }}
        {{- end }}
{{- end }}