{{- if .Values.postgresql.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    {{- if eq .Values.postgresql.strategy.type "Recreate" }}
    type: {{ .Values.postgresql.strategy.type }}
    {{- else }}
    {{ toYaml .Values.general.strategy | nindent 4 }}
    {{- end }}
  {{- if .Values.postgresql.serviceAccount }}
  serviceAccountName: {{ .Values.postgresql.serviceAccount }}
  {{- end }}
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        checksum/postgresql-config: {{ include (print $.Template.BasePath "/postgres/postgresql-config.yaml") . | sha256sum }}
        checksum/db-secret: {{ include (print $.Template.BasePath "/db-secret.yaml") . | sha256sum }}
        {{- include "globalPodAnnotations" . | indent 8 }}
        {{- if .Values.postgresql.podAnnotations }}
        {{ toYaml .Values.postgresql.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: postgresql-container
        image: {{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        imagePullPolicy: {{ .Values.postgresql.imagePullPolicy | default "IfNotPresent" }}
        envFrom:
          - configMapRef:
              name: postgresql-configmap
          - secretRef:
              name: db-secret
          {{- if .Values.postgresql.envFrom }}
          {{ toYaml .Values.postgresql.envFrom | nindent 10 }}
          {{- end }}
        ports:
          - containerPort: 5432
            protocol: TCP
        {{- if .Values.persistentStorage.postgres.enabled }}
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
            subPath: postgres/data
        {{- end }}
        {{- if or (.Values.postgresql.resources.requests) ((.Values.postgresql.resources.limits)) }}
        resources:
          {{- if .Values.postgresql.resources.requests }}
          requests:
          {{ toYaml .Values.postgresql.resources.requests | nindent 12 }}
          {{- end }}
          {{- if .Values.postgresql.resources.limits }}
          limits:
          {{ toYaml .Values.postgresql.resources.limits | nindent 12 }}
          {{- end }}
        {{- end }}
      imagePullSecrets:
        {{- if .Values.general.imagePullSecrets}}
        {{ toYaml .Values.general.imagePullSecrets | nindent 8 }}
        {{- end }}
        {{- if .Values.postgresql.imagePullSecrets}}
        {{ toYaml .Values.postgresql.imagePullSecrets | nindent 8 }}
        {{- end }}
      {{- if .Values.persistentStorage.postgres.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
      {{- end }}
{{- end }}