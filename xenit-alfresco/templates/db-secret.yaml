{{- if not .Values.general.secrets.db.selfManaged }}
{{- $db_secret_name := "db-secret" }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $db_secret_name }}

data:
  # try to get the old secret and sync-service-configmap
  # keep in mind, that a dry-run only returns an empty map
  {{- $old_db_sec := lookup "v1" "Secret" .Release.Namespace $db_secret_name }}

  # check, if a secret isn't already set and no user is passed
  {{- if and (not $old_db_sec) (not $old_db_sec.data) (not .Values.general.db.username) }}
  {{- $generated_db_user := randAlphaNum 20 | b64enc -}}
  # if not set and not passed, then generate a new user
  DB_USERNAME: {{ $generated_db_user }}
  # Setting the data to both be compatible with the Postgres Pods and the ACS Pods
  POSTGRES_USER: {{ $generated_db_user }}
  # check if the secret exists and no user is passed
  {{- else if and ($old_db_sec) ($old_db_sec.data) (not .Values.general.db.username) }}
  # if set and not passed, then use the old value
  DB_USERNAME: {{ index $old_db_sec.data "DB_USERNAME" }}
  POSTGRES_USER: {{ index $old_db_sec.data "POSTGRES_USER" }}
  {{- else }}
  DB_USERNAME: {{ .Values.general.db.username | b64enc }}
  POSTGRES_USER: {{ .Values.general.db.username | b64enc }}
  {{- end }}

  # check, if a secret isn't already set and no password is passed
  {{- if and (not $old_db_sec) (not $old_db_sec.data) (not .Values.general.db.password) }}
  {{- $generated_db_password := randAlphaNum 20 | b64enc -}}
  # if not set and not passed, then generate a new password
  DB_PASSWORD: {{ $generated_db_password }}
  # Setting the data to both be compatible with the Postgres Pods and the ACS Pods
  POSTGRES_PASSWORD: {{ $generated_db_password }}
  # check if the secret exists and no password is passed
  {{- else if and ($old_db_sec) ($old_db_sec.data) (not .Values.general.db.password) }}
  # if set and not passed, then use the old value
  DB_PASSWORD: {{ index $old_db_sec.data "DB_PASSWORD" }}
  POSTGRES_PASSWORD: {{ index $old_db_sec.data "POSTGRES_PASSWORD" }}
  {{- else }}
  DB_PASSWORD: {{ .Values.general.db.password | b64enc }}
  POSTGRES_PASSWORD: {{ .Values.general.db.password | b64enc }}
  {{- end }}
{{- end }}